name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 20
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/t3_skeleton_db_dd
  JWT_SECRET: dummysecretforCI
  VITE_API_URL: http://localhost:5000/api/v1
  NODE_ENV: production

jobs:
  build-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: t3_skeleton_db_dd
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: ⎔ Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install Root Dependencies
        run: npm install

      - name: ⚙️ Generate Prisma Client
        working-directory: apps/api
        run: npx prisma generate --schema=../../packages/infrastructure/src/prisma/schema.prisma

      - name: 🧱 Run Migrations
        working-directory: apps/api
        run: npx prisma migrate deploy --schema=../../packages/infrastructure/src/prisma/schema.prisma

      - name: ✅ Run Backend Tests
        working-directory: apps/api
        run: npm run test || echo "No tests yet"

      - name: 🧪 Build Frontend
        working-directory: apps/web
        run: npm run build

  deploy:
    name: 🚀 Deploy Docker Images
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Build & Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/t3-backend-ddd:latest

      - name: 📦 Build & Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/web
          file: ./apps/web/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/t3-frontend-ddd:latest

      # Optional SSH Deployment
      # - name: 🚀 SSH Deploy to VPS
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.VPS_PRIVATE_KEY }}
      #     script: |
      #       cd /path/to/app
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/t3-backend:latest
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/t3-frontend:latest
      #       docker-compose up -d --build
